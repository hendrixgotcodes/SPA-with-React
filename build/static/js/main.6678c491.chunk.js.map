{"version":3,"sources":["components/_buttons.js","components/_header.js","components/_tasks.js","components/_form.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","innerText","onClick","style","backgroundColor","className","defaultProps","e","console","log","Header","title","onShowForm","Task","tasks","onDelete","onToggle","map","task","reminder","onDoubleClick","id","text","day","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","preventDefault","type","placeholder","value","onChange","target","checked","App","setTasks","formShown","toggleForm","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6678c491.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({color, innerText, onClick})=>{\r\n\r\n    return <button \r\n                onClick={onClick} \r\n                style={{backgroundColor:color}} \r\n                className='btn'\r\n            >\r\n                {innerText}\r\n            </button>\r\n\r\n}\r\n\r\nButton.defaultProps = {\r\n    innerText: 'I am a button',\r\n    onClick: (e)=>{\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    innerText: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './_buttons';\r\n\r\nconst Header = ({title, onShowForm})=>{\r\n\r\n    return (\r\n        \r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color=\"rgb(50, 150, 100)\" innerText='Hello' onClick={onShowForm}/>\r\n\r\n        </header>\r\n\r\n    )\r\n\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({tasks, onDelete, onToggle})=>{\r\n\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n                <div key={task.id}  className={`tasks ${task.reminder===true ? 'reminder' : ''}`} onDoubleClick={()=>{onToggle(task.id)}}>\r\n                    <h3>\r\n                        {task.text}\r\n                        <FaTimes className=\"fa\" onClick={()=>{onDelete(task.id)}}/>\r\n                    </h3>\r\n                    <p>{task.day}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Task;","import React, {useState} from 'react';\r\n\r\nconst AddTask = ({onAdd})=>{\r\n\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    function submitForm(e){\r\n\r\n        e.preventDefault();\r\n\r\n        onAdd({text, day, reminder});\r\n\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n\r\n    }\r\n\r\n    return(\r\n\r\n        <form className=\"add-form\" onSubmit={submitForm}>\r\n\r\n            <div className=\"form-control\">\r\n\r\n                <label>\r\n                    Task\r\n                    <input type=\"text\" placeholder=\"Add task\"\r\n                        value={text}\r\n                        onChange = {(e)=> setText(e.target.value)}\r\n                    />\r\n                </label>\r\n                \r\n            </div>\r\n            <div className=\"form-control\">\r\n\r\n                <label>\r\n                    Day & Time\r\n                    <input type=\"text\" placeholder=\"Add Day & Time\"\r\n                         value={day}\r\n                         onChange = {(e)=> setDay(e.target.value)}\r\n                    />\r\n                </label>\r\n\r\n            </div>\r\n            <div className=\"form-control\">\r\n\r\n                <label>\r\n                    Set Reminder\r\n                    <input type=\"checkbox\"\r\n                     checked={reminder}\r\n                     onChange = {(e)=> setReminder(e.target.checked)}\r\n                    />\r\n                </label>\r\n\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\"/>\r\n\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AddTask","// import '../public/css/index.css';\nimport './App.css';\nimport Header from \"./components/_header\";\nimport Task from './components/_tasks';\nimport AddTask from './components/_form';\nimport {useState} from 'react';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([\n\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true\n    },\n    {\n        id:2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 3rd at 2:30pm',\n        reminder: false\n    }\n\n  ])\n\n  const [formShown, toggleForm] = useState(false); \n\n  function deleteTask(id){\n\n    setTasks(tasks.filter((task)=>task.id !== id))\n  }\n\n  function toggleReminder(id){\n\n    // setTasks(tasks.map((task)=> task.id === id\n    //   ? {...task, reminder : !task.reminder} : task\n    // ))\n\n    //in case you do not understand the code up there, the one below explains it\n    setTasks(tasks.map((task)=>{\n\n      if(task.id === id){\n\n          task.reminder = !task.reminder;\n          return task;\n\n      }\n      else{\n         return task;\n      }\n\n    }))\n\n  }\n\n  const addNewTask = (task)=>{\n\n      const id = Math.floor(Math.random()*1000 + 1);\n      const newTask = {id, ...task};\n      setTasks([...tasks, newTask]);\n\n  }\n\n\n  return (\n\n    <div className=\"center\">\n\n      <div className=\"container\">\n        \n          <Header onShowForm = {()=> toggleForm(!formShown)}/>\n          {formShown && <AddTask onAdd={addNewTask} />}\n          {\n            tasks.length > 0 ? (\n                <Task tasks={tasks} onDelete={deleteTask}  onToggle={toggleReminder}/>\n            ):(\n              'No tasks to show'\n            )\n          }\n\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}